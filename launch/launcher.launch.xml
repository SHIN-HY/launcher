<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="launch_ouster" default="false" description="launch ouster"/>
    <arg name="launch_roscco" default="true" description="launch roscco"/>
    <arg name="launch_adma" default="true" description="launch adma"/>
    <arg name="launch_autoware_interface" default="true" description="launch roscco_to_aw"/>
    <arg name="launch_ros2_socketcan" default="true" description="launch ros2_socketcan"/>
    <arg name="run_qt_ros2" default="true" description="launch qt_ros2"/>
    <arg name="run_twist_controller" default="true" description="launch twist_controller"/>
    <arg name="launch_tf" default="true" description="launch tf"/>

    <group if="$(var launch_ouster)">
        <include file="$(find-pkg-share ouster_ros)/launch/driver.launch.py">
        </include>
    </group>

    <group if="$(var launch_roscco)">
        <include file="$(find-pkg-share roscco)/launch/roscco.launch.xml">
        </include>
    </group>

    <group if="$(var launch_adma)">
        <include file="$(find-pkg-share adma_ros2_driver)/launch/adma_driver.launch.py">
        </include>
    </group>
    
    <group if="$(var launch_autoware_interface)">
        <include file="$(find-pkg-share autoware_interface)/launch/autoware_interface.launch.xml">
        </include>
    </group>

    <group if="$(var launch_ros2_socketcan)">
        <push-ros-namespace namespace="socketcan/vehicle"/>
        <include file="$(find-pkg-share ros2_socketcan)/launch/socket_can_receiver.launch.py">
          <arg name="interface" value="can1"/>
        </include>
    </group>

    <group if="$(var launch_ros2_socketcan)">
        <push-ros-namespace namespace="socketcan/roscco"/>
        <include file="$(find-pkg-share ros2_socketcan)/launch/socket_can_receiver.launch.py">
          <arg name="interface" value="can0"/>
        </include>
    </group>

    <group if="$(var run_qt_ros2)">
      <node pkg="qt_ros2" exec="exec" name="qt_ros2" args="" />
    </group>

    <group if="$(var run_twist_controller)">
      <node pkg="twist_controller" exec="twist_controller" name="twist_controller" args="" />
    </group>

    <group if="$(var launch_tf)">
        <node pkg="tf2_ros" exec="static_transform_publisher" name="os_sensor_to_velodyne_right" 
          args="2.40998 -0.885587 -1.567 1.93328 3.10138 3.12247 os_sensor velodyne_right"/>
          
        <node pkg="tf2_ros" exec="static_transform_publisher" name="os_sensor_to_velodyne_left" 
          args="2.44644 0.989306 -1.54904 1.18267 0.0167743 -0.0292165 os_sensor velodyne_left"/>

        <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_os_sensor" 
          args="0.63 0.0 1.735 0.0 0 0 base_link os_sensor"/>

        <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_imu_adma" 
          args="0.45 0.0 0.45 0.0 0.0 0.0 base_link imu_link"/>

        <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_gnss" 
          args="0.38 0.0 1.695 0.0 0.0 0.0 base_link gnss"/>
    </group>
</launch>

